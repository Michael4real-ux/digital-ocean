name: Node Github CI

on:
  push:
    branches:
      - main

# Allows you to run this workflow manually from the Actions tab
# workflow_dispatch:
#     inputs:
#       version:
#         description: 'Image version'
#         required: true

jobs:
  app-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install and test
        run: |
          yarn install --frozen-lockfile
          yarn test
          yarn build
        env:
          CI: true

  docker-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          IMAGE_NAME: ${{secrets.IMAGE_NAME}}
        run: |
          echo ${DOCKER_PASSWORD} | docker login --username "$DOCKER_USER" --password-stdin
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/${{secrets.IMAGE_NAME}}:${{ github.sha }}

      - name: Docker Push
        run: docker push ${{secrets.DOCKER_USER}}/${{secrets.IMAGE_NAME}}:${{ github.sha }}

  # deploy:
  #   needs: [test]
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: SSH and deploy node app
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.SSH_HOST }}
  #       username: ${{ secrets.SSH_USERNAME }}
  #       key: ${{ secrets.SSH_KEY }}
  #       port: ${{ secrets.SSH_PORT }}
  #       script: |
  #         cd ~/node-github-demo
  #         git pull origin master
  #         npm install --production
  #         pm2 restart node-app

  deploy:
  # needs: [app-test]
    runs-on: ubuntu-latest
    # needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        env:
            DOCKER_USER: ${{secrets.DOCKER_USER}}
            DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
            IMAGE_NAME: ${{secrets.IMAGE_NAME}}
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            # Login to registry
            # docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            echo ${DOCKER_PASSWORD} | docker login --username "$DOCKER_USER" --password-stdin
            # Stop running container
            docker stop $IMAGE_NAME
            # Remove old container
            docker rm $IMAGE_NAME
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $IMAGE_NAME \
            $DOCKER_USER/$IMAGE_NAME:${{ github.sha }}
